name: 🧪 Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Lint dan format check
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🎨 Check formatting (if prettier available)
        run: |
          if npm list prettier 2>/dev/null; then
            npm run format:check || echo "No format:check script found"
          else
            echo "Prettier not found, skipping format check"
          fi
        continue-on-error: true

  # Test build untuk semua platform
  test-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.platform }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🔧 Install system dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build frontend
        run: npm run build

      - name: 🔨 Build Tauri (debug mode)
        run: npm run tauri:build:debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security audit
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔒 Run npm audit
        run: npm audit --audit-level=moderate

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 🔍 Cargo audit
        run: |
          cargo install cargo-audit
          cd src-tauri
          cargo audit

  # Dependency review untuk PR
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, 0BSD

  # Performance test (basic)
  performance-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build frontend
        run: npm run build

      - name: 📊 Bundle size analysis
        run: |
          echo "## Bundle Size Analysis" > bundle-report.md
          if [ -d "out" ]; then
            echo "Frontend build output:" >> bundle-report.md
            du -sh out/* | head -20 >> bundle-report.md
          fi
          
          echo "Node modules size:" >> bundle-report.md
          du -sh node_modules >> bundle-report.md
          
          echo "Package.json dependencies:" >> bundle-report.md
          npm ls --depth=0 >> bundle-report.md || true

      - name: 📤 Upload bundle report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis-${{ github.sha }}
          path: bundle-report.md 